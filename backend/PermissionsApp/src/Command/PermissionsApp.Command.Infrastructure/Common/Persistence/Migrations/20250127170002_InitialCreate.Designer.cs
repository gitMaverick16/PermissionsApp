// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PermissionsApp.Command.Infrastructure.Common.Persistence;

#nullable disable

namespace PermissionsApp.Command.Infrastructure.Common.Persistence.Migrations
{
    [DbContext(typeof(PermissionsAppDbContext))]
    [Migration("20250127170002_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PermissionsApp.Command.Domain.Permissions.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmployeeLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PermissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermissionTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionTypeId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeLastName = "Doe",
                            EmployeeName = "Jhon",
                            PermissionDate = new DateTime(2025, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            EmployeeLastName = "Smith",
                            EmployeeName = "Jane",
                            PermissionDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            EmployeeLastName = "Johnson",
                            EmployeeName = "Emily",
                            PermissionDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            EmployeeLastName = "Brown",
                            EmployeeName = "Olivia",
                            PermissionDate = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionTypeId = 5
                        },
                        new
                        {
                            Id = 5,
                            EmployeeLastName = "Martinez",
                            EmployeeName = "Lucas",
                            PermissionDate = new DateTime(2025, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermissionTypeId = 4
                        });
                });

            modelBuilder.Entity("PermissionsApp.Command.Domain.Permissions.PermissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PermissionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Sick Leave"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Vacation"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Maternity Leave"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Paternity Leave"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Personal Leave"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Bereavement Leave"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Medical Leave"
                        });
                });

            modelBuilder.Entity("PermissionsApp.Command.Domain.Permissions.Permission", b =>
                {
                    b.HasOne("PermissionsApp.Command.Domain.Permissions.PermissionType", "PermissionType")
                        .WithMany("Permissions")
                        .HasForeignKey("PermissionTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PermissionType");
                });

            modelBuilder.Entity("PermissionsApp.Command.Domain.Permissions.PermissionType", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
